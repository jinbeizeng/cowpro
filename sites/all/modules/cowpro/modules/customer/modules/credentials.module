<?php
/**
 *  Implementation of hook_menu()
 */
function credentials_menu() {
	$items['credentials_remove/%/%'] = array(
			'title' => 'Credentials Remove',
			'page callback' => 'credentials_cowpro_customer_profile_remove_file_confirm',
			'page arguments' => array(1, 2),
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
	);
	$items['credentials_select'] = array(
			'title' => 'Credentials Select',
			'page callback' => 'credentials_select_form',
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
	);

	return $items;
}

/**
 * Implements hook_views_api().
 */
function credentials_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'credentials') . '/includes/views',
  );
}

function credentials_cowpro_customer_profile_credentials_create($values) {
	$values += array(
			'files' => array(),//以数组的形式存放的证明文件的uri，数组中的每一项，存放一个uri
	);
	return $values;
}

function credentials_cowpro_customer_profile_credentials_save($profile) {
	$data = array();
	$data['files'] = $profile->files;
	$profile->data = $data;
	$profile->verified = TRUE;
	return $profile;
}

function credentials_cowpro_customer_profile_credentials_load($profile) {
	$profile->files = $profile->data['files'];
	return $profile;
}

function credentials_cowpro_customer_profile_credentials_form($form, &$form_state, $profile) {
	$_SESSION ['profile_uid'] = $profile->uid;

	// Include the CTools tools that we need.
	ctools_include('ajax');
	ctools_include('modal');

	// Add CTools' javascript to the page.
	ctools_modal_add_js();

	// Create a table that we can have data removed from via AJAX.
	$header = array(t('Row'), t('Content'), t('Actions'));
	$rows = array();
	$i = 0;
	foreach($profile->files as  $f) {
		$uri_md5 = md5($f['uri']);
		$rows[] = array(
				'class' => array('ajax-credentials-row-'. $i),
				'data' => array(
						$i,
						'<img src=' . file_create_url($f['uri']) . '>',
						ctools_ajax_text_button("remove", "credentials_remove/$i/$uri_md5", t('Delete this row'), 'credentials_remove'),
				),
		);
		$i++;
	}

	$output = theme('table', array('header' => $header, 'rows' => $rows, array('class' => array('ajax-credentials-table'))));

	$form['scanning_copy_uri'] = array(
			'#markup' => $output,
	);
	$form['file'] = array(
			'#type' => 'file',
			'#name' => 'files[]',
			'#title' => '证明文件',
			'#description' => '上传图片文件，可接受的文件格式为: png gif jpg jpeg.',
			'#size' => 22,
			'#attributes' => array('multiple' => 'multiple'),
	);

	$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Upload'),
			'#submit' => array('credentials_form_submit'),
	);

	return $form;
}

function credentials_file_validate_name(stdClass $file) {
	$errors = array();
	if (!isset($_SESSION ['profile_uid'])) {
		$errors[] = t('SESSION失效，请刷新页面以后再试。');
		return $errors;
	}

	$uid = $_SESSION ['profile_uid'];

	//generate file name
	$path = $file->filename;
	$ext = pathinfo($path, PATHINFO_EXTENSION);
	$file->filename = "credentials_user_$uid.$ext";

	$path = 'public://credentials/';
	file_prepare_directory($path, FILE_CREATE_DIRECTORY);

	//check if file exists. if exists rename it append incremental number  until the filename is unique
	$file->destination = file_destination($path.$file->filename, FILE_EXISTS_RENAME);

	// If file_destination() returns FALSE then $replace == FILE_EXISTS_ERROR and
	// there's an existing file so we need to bail.
	if ($file->destination === FALSE) {
		$errors[] = t('The file %source could not be uploaded because a file by that name already exists in the destination %directory.',
				array('%source' => $file->source, '%directory' => $path));
	}

	return $errors;
}

function credentials_cowpro_customer_profile_credentials_form_validate($form, &$form_state, $profile) {
    //Save multiple files
    $num_files = count($_FILES['files']['name']);
    for ($i = 0; $i < $num_files; $i++) {
        $file = file_save_upload($i, array(
            'file_validate_is_image' => array(),
            'file_validate_extensions' => array('png gif jpg jpeg'),
        	'credentials_file_validate_name' => array(),
        ));
        if ($file) {
        	$path = 'public://credentials/';
        	file_prepare_directory($path, FILE_CREATE_DIRECTORY);
            if ($file = file_move($file, $path)) {
                $form_state['values']['file'][$i] = $file;
            }
            else {
                form_set_error('file', t('Failed to write the uploaded file the site\'s file folder.'));
            }
        }
    }
}

//function credentials_cowpro_customer_profile_credentials_form_submit($form, &$form_state, &$profile) {
function credentials_form_submit($form, &$form_state) {
	if (!isset($_SESSION ['profile_uid'])) {
		drupal_set_message(t('SESSION失效，请刷新页面以后再试。'));
	} else {
		$uid = $_SESSION ['profile_uid'];
		$profile_credentials = cowpro_customer_profile_load_one_row_with_conditions($uid, 'credentials');
		if (!$profile_credentials) {
			$profile_credentials = cowpro_customer_profile_new('credentials', $uid);
		}
		foreach ($form_state['values']['file'] as $file) {
			$new_file = file_load($file->fid);
			$file_info = image_get_info($file->uri);
			$profile_credentials->files[]['uri'] = $file->uri;
		}

		cowpro_customer_profile_save($profile_credentials);
	}
}

function credentials_cowpro_customer_profile_credentials_extra_fields() {
	$result = array(
			'form' => array(
					'files' => array(
							'label' => '证明文件',
							'description' => '证明文件',
							'weight' => -9,
					),
			),
			'display' => array(
					'files' => array(
							'label' => '证明文件',
							'description' => '证明文件',
							'weight' => -9,
					),
				)
	);

	return $result;
}

/**
 * Implements hook_cowpro_customer_profile_type_info().
 */
function credentials_cowpro_customer_profile_type_info() {
	$profile_types = array();

	$profile_types['credentials'] = array(
			'type' => 'credentials',
			'name' => '证明文件',
			'description' => '贷款人在填写贷款申请表的时候可以从中选择需要的证明文件，这样可以方便贷款申请人多次贷款',
			'help' => '',
			'weight' => 100,
	);

	return $profile_types;
}

function credentials_cowpro_customer_profile_remove_file($row, $uri_md5) {
	ctools_include('modal');
	ctools_include('ajax');
	$commands = array();

	if (!isset($_SESSION ['profile_uid'])) {
		$commands[] = ajax_command_alert('删除文件失败，请刷新页面以后再试。');
	} else {
		$uid = $_SESSION ['profile_uid'];
		$profile_credentials = cowpro_customer_profile_load_one_row_with_conditions($uid, 'credentials');
		$uri_list = array();
		foreach ($profile_credentials->files as $f) {
			$current_uri_md5 = md5($f['uri']);
			if ($current_uri_md5 != $uri_md5) {
				$uri_list[]['uri'] = $f['uri'];
 			}
		}
		$profile_credentials->files = $uri_list;
		cowpro_customer_profile_save($profile_credentials);

		$commands[] = ajax_command_remove("tr.ajax-credentials-row-$row");
		$commands[] = ajax_command_restripe("table.ajax-credentials-table");
		$commands[] = ctools_modal_command_dismiss();
	}
	print ajax_render($commands);
	exit;
}

function credentials_cowpro_customer_profile_remove_file_confirm($row, $uri_md5) {
	ctools_include('modal');
	ctools_include('ajax');
	$form_state = array(
			'title' => t('Delete'),
			'ajax' => TRUE,
			'row' => $row,
			'uri_md5' => $uri_md5,
	);
	$output = ctools_modal_form_wrapper('credentials_delete_form', $form_state);
	if (empty($output)) {
		$output[] = ctools_ajax_command_reload();
	}
	print ajax_render($output);
	drupal_exit();
}

function credentials_delete_form($form_state = NULL){
	$form['message'] = array(
			'#prefix' => '<div class="delete_message">',
			'#value' => t('Are you sure want to delete?'),
			'#suffix' => '</div>',
	);
	$form['submit']['delete'] = array(
			'#prefix' => "<div id = 'delete_button'>",
			'#suffix' => "</div>",
			'#value' => t('Delete'),
			'#type' => 'submit',
			'#submit' => array('credentials_delete_form_submit'),
	);
	$form['submit']['cancel'] = array(
			'#prefix' => "<div id = 'cancel_button'>",
			'#suffix' => "</span></div>",
			'#value' => t('Cancel'),
			'#type' => 'submit',
			'#submit' => array('credentials_delete_form_submit'),
	);
	return $form;
}

function credentials_delete_form_submit($form, &$form_state) {
	if ($form_state['triggering_element']['#value'] == t('Cancel')) {
		ctools_include('modal');
		ctools_include('ajax');
		$commands = array();
		$commands[] = ctools_modal_command_dismiss();
		print ajax_render($commands);
		exit;
	} else {
		credentials_cowpro_customer_profile_remove_file($form_state['row'], $form_state['uri_md5']);
	}
}

/**
 * Form submit handler for node_form().
 *
 * Upon preview and final submission, we need to renumber poll choices and
 * create a teaser output.
 */
function credentials_node_form_submit(&$form, &$form_state) {
	// Renumber choices.
	$form_state['values']['choice'] = array_values($form_state['values']['choice']);
	$form_state['values']['teaser'] = poll_teaser((object) $form_state['values']);
}

/**
 * Implements hook_field_widget_form_alter().
 */
function credentials_field_widget_form_alter(&$element, &$form_state, $context) {
	switch ($context['instance']['widget']['type']) {
		case 'user_reference_autocomplete':
			ctools_include('ajax');
			ctools_include('modal');
			ctools_modal_add_js();

			global $base_url;
			drupal_add_js(array('basePath' => $base_url, 'urlIsAjaxTrusted' => array("$base_url/credentials_select" => TRUE), ), 'setting');
			drupal_add_js ( drupal_get_path ( 'module', 'credentials' ) . '/credentials.js' );

			//$markup = ctools_modal_text_button("选择常用证明文件", "$base_url/credentials_select", t('Select credentials'), 'credentials_select');
			$markup =ctools_ajax_text_button("选择常用证明文件", "$base_url/credentials_select", t('Select credentials'));
			$markup = str_replace('title=', 'id="div-credentials-select" title=', $markup);
			$element[] = array(
				'#markup' => $markup,
			);
			$element[] = array(
				'#markup' => '<div id="div-credentials-content"></div>',
			);
			break;
	}
}

function credentials_select_form($j) {
	$content = _credentials_select_form($_POST['applicant']);
	ctools_include('ajax');
	$commands = array();
	$commands[] = ajax_command_html('#div-credentials-content', $content);
	print ajax_render($commands);
	exit;
}

function _credentials_select_form($applicant) {
	//admin [uid:1]
	$subject = $applicant;
	$pattern = '/\[uid:(\d+)\]$/';
	preg_match($pattern, $subject, $matches);
	$applicant_uid = intval($matches[1]);
	$profile_credentials = cowpro_customer_profile_load_one_row_with_conditions($applicant_uid, 'credentials');
	$form_state['title'] = sizeof($profile_credentials->files);
	$header = array(t('Row'), t('Content'), t('Actions'));
	$rows = array();
	$i = 0;
	foreach($profile_credentials->files as  $f) {
		$uri_md5 = md5($f['uri']);
		$checkbox = "<input type=\"checkbox\" id=\"cb-credentials-select-$uri_md5\" name=\"cb-credentials-select-$uri_md5\" value=\"1\" class=\"form-checkbox\">";
		$rows[] = array(
				'class' => array('ajax-credentials-row-'. $i),
				'data' => array(
						$i,
						'<img src=' . file_create_url($f['uri']) . '>',
						$checkbox,
				),
		);
		$i++;
	}

	$output = theme('table', array('header' => $header, 'rows' => $rows, array('class' => array('ajax-credentials-table'))));
	return $output;
}

function credentials_node_submit($node, $form, &$form_state) {
	foreach ($_POST as $key => $value) {
		if (substr( $key, 0, 22 ) === "cb-credentials-select-") {
			if ($value == 1) {
				$uri_md5 = substr( $key, 22 );
				$applicant_uid = $node->field_applicant['und'][0]['uid'];
				$profile_credentials = cowpro_customer_profile_load_one_row_with_conditions($applicant_uid, 'credentials');
				foreach($profile_credentials->files as  $f) {
					if ($uri_md5 === md5($f['uri'])) {
						$source = file_uri_to_object($f['uri'], TRUE);
						$path = 'public://issuing';
						file_prepare_directory($path, FILE_CREATE_DIRECTORY);
						$dest = file_copy($source, $path, FILE_EXISTS_RENAME);
						drupal_set_message($dest->uri );
						$img = array();
						$img['fid'] = $dest->fid;
						$img['display'] = 1;
						//$img['width'] = $dest->image_dimensions['width'];
						//$img['height'] = $dest->image_dimensions['height'];
						$img['description'] = '';
						$img['upload'] = '';
						$img['alt'] = '';
						$img['title'] = '';
						$node->field_image['und'][] = $img;
					}
				}
			}
		}
	}
}
  
function credentials_user_view_detail($profile) {
	$result = array ();
	$message = "";
	global $user;
	if ($profile) {
		$goto_url = $GLOBALS['base_url'] . "/user/" . $user->uid . "/customer-profiles/" . $profile->type;
		if (! $profile->verified) {
			$verified = FALSE;
			$markup = '未认证';
			$message = "还未进行证明文件认证，请先认证！<a href='" . $goto_url . "' class='gotourl'>去认证</a>";
		} else {
			$verified = TRUE;
			$markup = '已认证';
		}
	} else {
		$goto_url = $GLOBALS['base_url'] . "/user/" . $user->uid . "/customer-profiles/credentials";
		$verified = FALSE;
		$markup = '未认证';
		$message = "还未进行证明文件认证，请先认证！<a href='" . $goto_url . "' class='gotourl'>去认证</a>";
	}
	$result ['verified'] = $verified;
	$result ['markup'] = $markup;
	$result ['message'] = $message;
	return $result;
}