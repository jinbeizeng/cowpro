<?php

define('COMMERCE_SERVICE_URL', 'https://shop.jinbeizeng.com/service/');
define('TOTAL_PAGE', '1');

/**
 * Implements hook_menu().
 */
function cowpro_shop_menu() {
	$items = array ();
	$items ['shop'] = array (
			'title' => '积分商城',
			'description' => '用积分兑换商品',
			'page callback' => 'cowpro_shop_list',
			'access callback' => TRUE,
			//'menu_name' => 'navigation',
			'type' => MENU_NORMAL_ITEM,
			'weight' => 10
	);
	$items ['shop/detail/%'] = array (
			'title' => '积分商城',
			'description' => '用积分兑换商品',
			'page callback' => 'cowpro_shop_detail',
			'page arguments' => array(2),
			'access callback' => TRUE,
			//'menu_name' => 'navigation',
			'type' => MENU_NORMAL_ITEM,
			'weight' => 10
	);
	$items ['shop/buy/%/%'] = array (
			'title' => '兑换',
			'description' => '用积分兑换商品',
			'page callback' => 'cowpro_shop_buy',
			'page arguments' => array(2, 3),
			'access callback' => TRUE,
			'type' => MENU_CALLBACK,
			'weight' => 10
	);
	$items ['shop/redemption'] = array (
			'title' => '兑现奖金',
			'description' => '兑现奖金',
			'page callback' => 'cowpro_shop_redemption',
			'access callback' => 'user_is_logged_in',
			'type' => MENU_CALLBACK,
			'file' => 'includes/cowpro_shop_redemption.inc',
	);
	return $items;
}

/**
 * Implements hook_views_api().
 */
function cowpro_shop_views_api()
{
	return array(
			'api' => 3,
			'path' => drupal_get_path('module', 'cowpro_shop') . '/includes/views',
	);
}

/**
 * Implements hook_entity_info().
 */
function cowpro_shop_entity_info() {
	$return = array (
			'cowpro_shop_deliver' => array (
					'label' => t ( 'Cowpro Shop Deliver' ),
					'controller class' => 'CowproShopDeliverEntityController',
					'base table' => 'cowpro_shop_deliver',
					'fieldable' => FALSE,
					'entity keys' => array (
							'id' => 'deliver_id',
					),
					'bundles' => array (),
					'load hook' => 'cowpro_shop_deliver_load',
					'view modes' => array (
							'tweaky' => array(
									'label' => t('Tweaky'),
									'custom settings' => FALSE,
							),
					),
					'access callback' => 'cowpro_shop_entity_access',
			),
	);

	return $return;
}

/**
 * Implements callback_entity_info_access().
 */
function cowpro_shop_entity_access($op, $entity, $account, $entity_type) {
	return TRUE;
}

/**
 * Implementation of hook_action_info().
 */
function cowpro_shop_action_info() {
	return array (
			'cowpro_shop_deliver_action_on' => array (
					'type' => 'cowpro_shop_deliver',
					'label' => '已处理',
					'behavior' => array (
							'views_property'
					),
					'configurable' => FALSE,
					'vbo_configurable' => FALSE,
					'triggers' => array (
							'any'
					),
					'aggregate' => TRUE
			),
			'cowpro_shop_deliver_action_off' => array (
					'type' => 'cowpro_shop_deliver',
					'label' => '未处理',
					'behavior' => array (
							'views_property'
					),
					'configurable' => FALSE,
					'vbo_configurable' => FALSE,
					'triggers' => array (
							'any'
					),
					'aggregate' => TRUE
			),
	);
}

function cowpro_shop_deliver_action_on(&$entities, $context = array()) {
	require_once 'includes/cowpro_shop.deliver.inc';
	_cowpro_shop_deliver_action ( $entities, $context, 1 );
}

function cowpro_shop_deliver_action_off(&$entities, $context = array()) {
	require_once 'includes/cowpro_shop.deliver.inc';
	_cowpro_shop_deliver_action ( $entities, $context, 0 );
}

/**
 * Implements hook_theme().
 */
function cowpro_shop_theme() {
	return array(
			'cowpro_commerce_list' => array(
					'variables' => array('list' => NULL, 'page_html' => NULL),
					'file' => 'includes/cowpro_shop.pages.inc',
					'template' => 'includes/cowpro-commerce-list',
			),
			'cowpro_commerce_list_item' => array(
					'variables' => array('item' => NULL),
					'file' => 'includes/cowpro_shop.pages.inc',
					'template' => 'includes/cowpro-commerce-list-item',
			),
			'cowpro_commerce_item' => array(
					'variables' => array('item' => NULL),
					'file' => 'includes/cowpro_shop.pages.inc',
					'template' => 'includes/cowpro-commerce-item',
			),
	);
}

function cowpro_shop_list($page = 0) {
	$service = new WSClientServiceDescription();
	$service->name = 'commerce-kickstart';
	$service->label = 'commerce kickstart';
	$service->url = COMMERCE_SERVICE_URL;
	$service->type = 'rest';

	$operation = array();
	$operation['label'] = 'Index';
	$operation['url'] = 'entity_node';
	$operation['type'] = 'GET';
	$operation['parameter'] = array();
	$operation['parameter']['entity_type'] = array('type' => 'text', 'label' => 'Entity Type.');
	$operation['parameter']['page'] = array('type' => 'integer', 'label' => 'Page NO.');
	$operation['parameter']['pagesize'] = array('type' => 'integer', 'label' => 'Page Size');
	$operation['parameter']['sort'] = array('type' => 'text', 'label' => 'Sort');
	$operation['parameter']['direction'] = array('type' => 'text', 'label' => 'Sort Direction');
	//$operation['result'] = array('type' => 'node', 'label' => 'Node');
	$service->operations['index'] = $operation;

	//缓存商品列表
	if ( $cache = cache_get('shop_list_cache_'.$page )) {
		$result = $cache->data;
	}else {
		$result = $service->index('commerce_product', $page, 24, 'sticky', 'DESC');
		cache_set('shop_list_cache_'.$page, $result, 'cache', 60 * 60); //1 hour
	}

	$url = $GLOBALS['base_url'];
	$prev_page = $page - 1;
	$prev_page >= 0 ? $prev_page_html = "<a href='$url/shop/".$prev_page."'>上一页</a>" : $prev_page_html = "";

	$out_html = "<div id='shop_list'><a href='$url/shop'>首页</a>".$prev_page_html."";
	for( $i = 0; $i <= TOTAL_PAGE; $i++ ) {
		$j = $i + 1;
		if( $i == 0 ) $i = '';
		$out_html .= '<a href="' . $url . '/shop/'.$i.'">'.$j.'</a>';
	}

	$next_page = $page + 1;
	$next_page <= TOTAL_PAGE ? $next_page_html = "<a href='$url/shop/".$next_page."'>下一页</a>" : $next_page_html = "";

	$out_html .= "".$next_page_html."<a href='$url/shop/".TOTAL_PAGE."'>尾页</a></div>";
	$html = theme('cowpro_commerce_list', array('list' => $result,'page_html'=>$out_html));

	return $html;
}

function _cowpro_shop_retrieve_detail($nid) {
	$service = new WSClientServiceDescription();
	$service->name = 'commerce-kickstart';
	$service->label = 'commerce kickstart';
	$service->url = COMMERCE_SERVICE_URL;
	$service->type = 'rest';

	$operation = array();
	$operation['label'] = 'retrieve';
	$operation['url'] = 'entity_node/@nid';
	$operation['type'] = 'GET';
	$operation['parameter']['nid'] = array('type' => 'integer', 'label' => 'Node id');
	$operation['result'] = array('type' => 'node', 'label' => 'Node');
	$service->operations['retrieve'] = $operation;
	$result = $service->retrieve($nid);
	return $result;
}

function cowpro_shop_detail($nid) {
	$result = _cowpro_shop_retrieve_detail($nid);
	$key_words_array = array("移动","联通","电信","话费","充值");
	$result['show_bill_input'] = 1;
	foreach( $key_words_array as $item ){
		if( strpos($result['title_original'],$item) === false )  $result['show_bill_input'] = 0 ;
	}
	if( $result['show_bill_input'] == 1 ) {
		global $user;
		$mobile = db_select('cowpro_customer_profile', 'profile')->fields('profile', array('search_field'))->condition('type', 'mobile')->condition('uid',  $user->uid )->execute()->fetchAssoc();
		$result['user_mobile'] = $mobile['search_field'];
	}
	drupal_set_title($result['title']);
	$html = theme('cowpro_commerce_item', array('item' => $result));

	return $html;
}

function cowpro_shop_buy($nid, $vid) {
	$result = _cowpro_shop_retrieve_detail($nid);
	$found = FALSE;
	$title = NULL;
	$price = NULL;
	foreach ($result['products'] as $p) {
		if ($p['revision_id'] === $vid) {
			$found = TRUE;
			$title = $p['title'];
			$price = $p['commerce_price']['und'][0]['amount'];
			break;
		}
	}

	if (!$found) {
		drupal_set_message('没有找到所需商品！', 'error');
	} else {
		$qty = $_GET['qty'];
		$mbl = @$_GET['mbl'];
		_cowpro_shop_buy_item($nid, $vid, $title, $price, $qty, $mbl);
	}
	$url = $GLOBALS['base_url'] . "/shop/detail/$nid";
	return drupal_goto($url);
}

function _cowpro_shop_buy_item($nid, $vid, $title, $price, $qty, $mbl = NULL) {
	$qty = intval($qty);
	if ($qty <= 0) {
		drupal_set_message('要兑换的商品数量不正确！', 'error');
		return;
	}
	if( !empty($mbl) ) {
		$isMbl = preg_match("/^1[34578]\d{9}$/", $mbl) ? true : false;
		if( !$isMbl ) {
			drupal_set_message('输入的手机号码格式不正确！', 'error');
			return;
		}
	}

	global $user;
	$points = userpoints_get_current_points($user->uid);
	$amount = ($price / 100) * $qty;
	if ($points < $amount) {
		drupal_set_message('积分不足！', 'error');
		return;
	}

	//$tid = _blackhat_leadsdata_get_user_points_tid();
	$user_mobile = db_select('cowpro_customer_profile', 'profile')->fields('profile', array('search_field'))->condition('type', 'mobile')->condition('uid',  $user->uid )->execute()->fetchAssoc();
	$des_mobile = !empty($mbl) ? $mbl : $user_mobile['search_field'];
	$desc = "(数量=$qty;nid=$nid;vid=$vid;手机号码=".$des_mobile.")$title";
	$params = array (
			'uid' => $user->uid,
			'points' => 0-$amount,
			'moderate' => false,
			'description' => $desc,
			'display' => false,
			'reference' => 'shop',
			//'tid' => $tid,
			//'entity_id' => $nid,
			//'entity_type' => 'order',
	);
	$result = userpoints_userpointsapi($params);
        
	if ($result['status']) {
		$txn_id = $result['transaction']['txn_id'];
		$entity_value = array(
				'txn_id' => $txn_id,
		);
		$entity = entity_create('cowpro_shop_deliver', $entity_value);
		entity_get_controller('cowpro_shop_deliver')->save($entity);
                //判断如果商品是积分换代金券，直接扣除积分，发放代金券，更改交易状态
                $result_detail = _cowpro_shop_retrieve_detail($nid);
                if( strpos($result_detail['title_original'],"代金券") ) {
                    $term = current(taxonomy_get_term_by_name("代金券"));
                    $tid = $term->tid;
                    $expirydate = strtotime('+6 month');
                    $voucher = 0;
                    //积分商品有3种，分别是750积分-》50代金券，1480积分-》100代金券，2900积分-》200代金券
                    $rule = array(750=>50, 1480=>100, 2900=>200);
                    foreach( $rule as $key=>$value ){
                        if( $amount % $key == 0 ) {
                             $voucher = $value;
                             break;
                        }
                    }
					 $flag = true;

                    for( $i=0;  $i < $qty ;$i++ ){
                         $params_voucher = array (
                                'uid' => $user->uid,
                                'points' => $voucher,
                                'description' => "积分兑换代金券",
                                'display' => false,
                                'reference' => 'shop',
                                'expirydate' => $expirydate,
                                'tid' => $tid,
                                'module' => 'cowpro_shop',
                                'search_field' => '积分兑换代金券',
                                'data' => array("reason"=>"积分兑换代金券"),
                        );
                        $result_voucher = userpoints_userpointsapi($params_voucher);
                        if( !$result_voucher['status'] ) {
                            $flag = false;
                        }
                    }
                    
                   
                    if( $flag ) {
                        $entity_value = array(
				'status' => 1,
                    );
                    $entity = entity_create('cowpro_shop_deliver', $entity_value);
                    entity_get_controller('cowpro_shop_deliver')->save($entity);

                    drupal_set_message('兑换的代金券已经到您账户！');
                    }else{
                        return drupal_set_message($result_voucher['reason'], 'error');
                    }
                }
	}

	if ($result['status']) {
		drupal_set_message('兑换申请已成功提交，我们的客服会与你联系！');
	} else {
		return drupal_set_message($result['reason'], 'error');
	}

}

function cowpro_shop_userpoints_list_transactions_alter(&$output) {
	ctools_include ( 'modal' );
	ctools_include ( 'ajax' );
	ctools_modal_add_js ();

	$account = $output['#account'];
	$i = 0;
	foreach ($output['list']['table']['#rows'] as $row) {
		if ($row['data'][1]['data'] === '奖金') {
			$output['list']['table']['#rows'][$i]['data'][0]['data'] = $row['data'][0]['data'] / 100;
		}
		$i++;
	}
	$output['list']['summary_table'] = array(
			'#theme' => 'table',
			'#header' => array(
					array(
							'data' => '积分与奖金',
							'colspan' => 3,
					),
			),
			'#rows' => array(
					array(
							'data' => array('积分', userpoints_get_current_points($account->uid), ''),
							'class' => array('userpoints-myuserpoints-total-approved'),
					),
					array(
							'data' => array('奖金', userpoints_get_current_points($account->uid, _cowpro_shop_get_user_points_money_tid()) / 100, ctools_modal_text_button ( '兑现奖金', 'shop/redemption', '兑现奖金' )),
							'class' => array('userpoints-myuserpoints-total-approved'),
					),
			),
			'#weight' => 10,
			'#attributes' => array('class' => array('userpoints-myuserpoints-total')),
	);
}

define('COWPRO_USERPOINTS_MONEY', '奖金');
function _cowpro_shop_get_user_points_money_tid()
{
	$term = current(taxonomy_get_term_by_name(COWPRO_USERPOINTS_MONEY));
	return $term->tid;
}

function cowpro_shop_redemption() {
	form_load_include($form_state, 'inc', 'cowpro_shop', 'cowpro_shop_redemption');

	ctools_include('modal');
	ctools_include('ajax');
	$form_state = array(
			'title' => '兑现奖金',
			'ajax' => TRUE,
	);
	$commands = ctools_modal_form_wrapper('cowpro_shop_redemption_form', $form_state);

	//以AJAX方式驱动modal窗口的显示的时候，暂时没有找到更好的定义窗口维度的方法，所以暂时用js的方式来实现
	$js = <<<js
	<script type="text/javascript">
	var width = 800;
	var height = 700;
	var contentRight = 25;
    var contentBottom = 45;
	jQuery('div.ctools-modal-content').css({
		'width': width + 'px',
		'height': height + 'px'
	});
    jQuery('div.ctools-modal-content .modal-content').css({
        'width': (width - contentRight) + 'px',
        'height': (height - contentBottom) + 'px'
    });
	var styleProps = jQuery('#modalContent').css('top');
	modalContentResize();
	jQuery('#modalContent').css('top', styleProps);
	</script>
js;

	$commands[0]['output'] .= $js;

	print ajax_render($commands);
	exit;

}